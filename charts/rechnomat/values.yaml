replicaCount: 1

image:
  repository: localhost:5000/rechnomat:latest
  tag: latest
  pullPolicy: IfNotPresent

application:
  name: rechnomat
  port: 8080
  env:
    # Параметры для первой базы данных
    DATABASE_DEV_HOST: postgres-dev
    DATABASE_DEV_PORT: "5432"
    DATABASE_DEV_USER: postgres
    DATABASE_DEV_PASSWORD: "{{ .Values.database.devPassword }}"
    DATABASE_DEV_NAME: dev_db
    # Параметры для второй базы данных
    DATABASE_IT_HOST: postgres-it
    DATABASE_IT_PORT: "5432"
    DATABASE_IT_USER: postgres
    DATABASE_IT_PASSWORD: "{{ .Values.database.itPassword }}"
    DATABASE_IT_NAME: it_db
    # Остальные переменные среды
    KEYCLOAK_URL: http://keycloak:8080
    DOVECOT_HOST: dovecot
    DOVECOT_PORT: "143"
    WEBDAV_HOST: webdav
    WEBDAV_PORT: "80"
    # Добавьте другие переменные среды по необходимости

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  hostname: rechnomat
  annotations: {}
  tls: false
  tlsSecret: ""

database:
  devPassword: postgres_password  # Пароль для postgres-dev
  itPassword: postgres_it_password  # Пароль для postgres-it

postgresql:
  image: postgres:13
  storageSize: 1Gi

keycloak:
  image: quay.io/keycloak/keycloak:latest
  adminUser: admin
  adminPassword: admin_password  # Замените на безопасный пароль

dovecot:
  image: dovecot/dovecot:latest  # Замените на ваш Docker-образ Dovecot
  storageSize: 1Gi

webdav:
  image: bytemark/webdav
  username: webdav_user
  password: webdav_password  # Замените на безопасный пароль
  storageSize: 1Gi

mailpit:
  image: axllent/mailpit

serviceAccount:
  create: true
  name: rechnomat-service-account
  automount: true
  annotations:
    example.com/annotation: "value"


